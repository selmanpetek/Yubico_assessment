AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Secret Provider
Parameters:
  PubPrivateVPC:
    Description: Put the CIDR of an existing VPC.
    Type: String
  PublicSubnet1:
    Description: Put the CIDR of an existing Public Subnet.
    Type: String
  PublicSubnet2:
    Description: Put the CIDR of another existing Public Subnet.
    Type: String
  PrivateSubnet1:
    Description: Put the CIDR of an existing Private Subnet.
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: mykeypair
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'


Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value: BastionHost
      SecurityGroupIds:
        - !GetAtt 'InstanceSecurityGroup.GroupId'
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: LatestAmiId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y mysql
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref PubPrivateVPC
      GroupDescription: Enable SSH access via port 22
      Tags:
        - Key: Name
          Value: BastionHost-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value: WebServer
      SecurityGroupIds:
        - !GetAtt 'WebSecurityGroup.GroupId'
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: LatestAmiId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y mysql
          sudo amazon-linux-extras install -y nginx1.12
          sudo systemctl start nginx
          sudo systemctl enable nginx
          echo "<html><img src="alexabuy.jpg" alt="Alexa Buy Whole Foods"></html>" | tee /usr/share/nginx/html/index.html
          wget -O /usr/share/nginx/html/alexabuy.jpg https://i.redd.it/v7exkf93r34z.jpg
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref PubPrivateVPC
      GroupDescription: Enable SSH access via port 22 and HTTP/HTTPS access via port 80 and 443
      Tags:
        - Key: Name
          Value: WebServer-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp:
            Ref: SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      SubnetId:
        Ref: PrivateSubnet1
      Tags:
        - Key: Name
          Value: DBServer
      SecurityGroupIds:
        - !GetAtt 'DBSecurityGroup.GroupId'
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: LatestAmiId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y mariadb-server mysql
          sudo systemctl start mariadb
          sudo systemctl enable mariadb
          sudo yum install -y firewalld
          sudo systemctl start firewalld
          sudo systemctl enable firewalld
          sudo firewall-cmd --permanent --add-port=3306/tcp
          sudo firewall-cmd --reload
          sudo firewall-cmd --list-all
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn:
      - InstanceSecurityGroup
    Properties:
      VpcId: !Ref PubPrivateVPC
      GroupDescription: Enable SSH access via port 22
      Tags:
        - Key: Name
          Value: BastionHost-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: Enable SSH access via port 22 to BastionHost
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Sub
            - ${a}/32
            - { a: !GetAtt EC2Instance.PrivateIp}
        - IpProtocol: tcp
          Description: Enable Mysql access via port 3306 to WebServer
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: !Sub
            - ${a}/32
            - { a: !GetAtt WebInstance.PrivateIp}
Outputs:

  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value:
      Fn::GetAtt:
        - EC2Instance
        - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value:
      Fn::GetAtt:
        - EC2Instance
        - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
        - EC2Instance
        - PublicIp
  BastionSGID:
    Description: Security Groups of Bastion Host
    Value:
      Fn::GetAtt:
        - InstanceSecurityGroup
        - GroupId